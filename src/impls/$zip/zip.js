/**
 * @generated-from ./$zip.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { iterableCurry } from '../../internal/iterable.js';
import { parallelEach } from '../../internal/parallel-each.js';
import { peekerate } from '../$peekerate/peekerate.js';
import { map } from '../$map/map.js';
import { some } from '../$some/some.js';
import { toArray } from '../$to-array/to-array.js';

const isDone = (peekr) => peekr.done;

export function* zip(sources) {
  const peekrs = toArray(map(sources, peekerate));
  let done = some(peekrs, isDone);

  try {
    while (!done) {
      yield peekrs.map(({ value }) => value);

      for (const peekr of peekrs) peekr.advance();

      done = some(peekrs, isDone);
    }
  } finally {
    parallelEach(peekrs, (peekr) => peekr.return());
  }
}

export default /*#__PURE__*/ iterableCurry(zip, {
  variadic: true,
});
