/**
 * @generated-from ./$find-best.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { Wrappable } from '../../types/iterable';

declare function findBest<T>(
  comparer: (value: T, i: number) => boolean,
): (iterable: Wrappable<T>) => T | undefined;

declare function findBest<T>(
  comparer: (value: T, i: number) => boolean,
  iterable: Wrappable<T>,
): T | undefined;

declare function findBest<T, S>(
  comparer: (value: S, i: number) => boolean,
  mapper: (value: T, i: number) => S,
): (iterable: Wrappable<T>) => T | undefined;

declare function findBest<T, S>(
  comparer: (value: S, i: number) => boolean,
  mapper: (value: T, i: number) => S,
  iterable: Wrappable<T>,
): T | undefined;

export { findBest };
