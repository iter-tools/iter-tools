/**
 * @generated-from ./$peekerate.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { AsyncSourceIterable, AsyncIteratorResult } from '../../types/async-iterable';

export interface AsyncPeekeratorIterator<T> {
  next(): AsyncIteratorResult<T>;
  return(): AsyncIteratorResult<T>;
  [Symbol.asyncIterator](): this;
}

interface AsyncPeekeratorBase<T> {
  readonly index: number;

  /* eslint-disable no-use-before-define */
  advance(): Promise<AsyncPeekerator<T>>;
  return(): Promise<AsyncPeekerator<T>>;
  /* eslint-enaable no-use-before-define */
  asIterator(): AsyncPeekeratorIterator<T>;
}

interface AsyncDonePeekerator<T> extends AsyncPeekeratorBase<T> {
  readonly current: { done: true; value: undefined };
  readonly done: true;
  readonly value: undefined;
}

interface AsyncValuePeekerator<T> extends AsyncPeekeratorBase<T> {
  readonly current: { done: false; value: T };
  readonly done: false;
  readonly value: T;
}

export type AsyncPeekerator<T> = AsyncDonePeekerator<T> | AsyncValuePeekerator<T>;

declare function asyncPeekerate<T>(source: AsyncSourceIterable<T>): AsyncPeekerator<T>;

export { asyncPeekerate };
