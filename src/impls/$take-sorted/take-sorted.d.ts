/**
 * @generated-from ./$take-sorted.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { Wrappable, IterableIterator } from '../../types/iterable';

declare function takeSorted<T>(iterable: Wrappable<T>): IterableIterator<T>;

declare function takeSorted<T>(n: number): (source: Wrappable<T>) => IterableIterator<T>;

declare function takeSorted<T>(
  n: number,
  compare: (a: T, b: T) => number,
): (source: Wrappable<T>) => IterableIterator<T>;

declare function takeSorted<T>(
  compare: (a: T, b: T) => number,
): (source: Wrappable<T>) => IterableIterator<T>;

declare function takeSorted<T>(n: number, source: Wrappable<T>): IterableIterator<T>;

declare function takeSorted<T>(
  n: number,
  compare: (a: T, b: T) => number,
  source: Wrappable<T>,
): IterableIterator<T>;

declare function takeSorted<T>(
  compare: (a: T, b: T) => number,
  source: Wrappable<T>,
): IterableIterator<T>;

export { takeSorted };
