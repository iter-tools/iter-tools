/**
 * @generated-from ./$find-best-or.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { iterableCurry } from '../../internal/iterable.js';
import { __peekerate } from '../$peekerate/peekerate.js';

export function __findBestOr(iterable, notFoundValue, comparer, mapper = (value) => value) {
  const peekr = __peekerate(iterable);

  if (peekr.done) {
    return notFoundValue;
  } else {
    let best = peekr.value;
    let bestValue = mapper(best, peekr.index);

    peekr.advance();

    while (!peekr.done) {
      const candidate = peekr.value;
      const candidateValue = mapper(candidate, peekr.index);
      if (comparer(bestValue, candidateValue)) {
        best = candidate;
        bestValue = candidateValue;
      }

      peekr.advance();
    }
    return best;
  }
}

export const findBestOr = iterableCurry(__findBestOr, {
  reduces: true,
  minArgs: 2,
  maxArgs: 3,
  growRight: true,
});
