/**
 * @generated-from ./$split-when.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncIterableCurry } from '../../internal/async-iterable.js';
import { AsyncBisector } from '../../internal/async-bisector.js';
import { __wrap } from '../$wrap/wrap.js';

export async function* asyncConditionStrategy(split, { predicate }, source) {
  let i = 0;
  let splat = false;
  for await (const value of source) {
    if (!splat && (await predicate(value, i++))) {
      yield split;
      splat = true;
    }
    yield value;
  }
}

export function __asyncSplitWhen(source, predicate) {
  return new AsyncBisector(source, asyncConditionStrategy, { predicate });
}

export const asyncSplitWhen = /*#__PURE__*/ asyncIterableCurry(
  function $splitWhen(source, predicate) {
    return __wrap(__asyncSplitWhen(source, predicate));
  },
  {
    forceSync: true,
  },
);
