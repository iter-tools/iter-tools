/**
 * @generated-from ./$filter.spec.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import assert from 'static-type-assert';

import { AsyncIterable, AsyncIterableIterator } from '../../../types/async-iterable';
import { asyncFilter } from 'iter-tools-es';

declare const Ø: never;

assert<AsyncIterableIterator<string>>(
  asyncFilter(
    Ø as (value: string | number) => value is string,
    Ø as AsyncIterable<string | number>,
  ),
);

assert<AsyncIterableIterator<number>>(
  asyncFilter(
    Ø as (value: string | number) => value is number,
    Ø as AsyncIterable<string | number>,
  ),
);

assert<AsyncIterableIterator<0>>(
  asyncFilter(Ø as (value: string | number) => value is 0, Ø as AsyncIterable<string | number>),
);

assert<AsyncIterableIterator<string | number>>(
  asyncFilter(
    Ø as (value: string | number) => boolean,
    Ø as AsyncIterable<string | number> | null | undefined,
  ),
);
