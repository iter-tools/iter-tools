/**
 * @generated-from ./tap.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { tap } from 'iter-tools-es';
import { wrap, unwrap, anyType } from '../../../test/helpers.js';

describe('tap', () => {
  describe('when source is empty', () => {
    it('yields no values', () => {
      const func = jest.fn((value: any) => value * 2);
      expect(unwrap(tap(func, null))).toEqual([]);
      expect(unwrap(tap(func, undefined))).toEqual([]);
      expect(unwrap(tap(func, wrap([])))).toEqual([]);
      expect(func.mock.calls).toEqual([]);
    });
  });

  describe('when source has values', () => {
    it('returns func(value, i) for each value in source', () => {
      const func: (value: number, i: number) => number = jest.fn((value, i) => value + i);
      expect(unwrap(tap(func, wrap([1, 2, 3])))).toEqual([1, 2, 3]);
      expect(anyType(func).mock.calls).toEqual([
        [1, 0],
        [2, 1],
        [3, 2],
      ]);
    });
  });
});
