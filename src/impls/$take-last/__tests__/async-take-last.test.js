/**
 * @generated-from ./$take-last.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncTakeLast } from '@iter-tools/es';
import { asyncWrap } from '../../../test/async-helpers.js';

describe('asyncTakeLast', () => {
  describe('when iterable is empty', () => {
    it('returns undefined', async () => {
      expect(await asyncTakeLast(null)).toBe(undefined);
      expect(await asyncTakeLast(undefined)).toBe(undefined);
      expect(await asyncTakeLast(asyncWrap([]))).toBe(undefined);
    });
  });

  describe('when iterable has values', () => {
    it('returns last value', async () => {
      expect(await asyncTakeLast(asyncWrap([1, 2, 3]))).toBe(3);
    });
  });
});
