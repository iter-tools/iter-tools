/**
 * @generated-from ./$zip-all.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncIterableCurry } from '../../internal/async-iterable.js';
import { asyncParallelEach } from '../../internal/async-parallel-each.js';
import { __asyncPeekerate } from '../$peekerate/async-peekerate.js';
import { __asyncMap } from '../$map/async-map.js';
import { __every } from '../$every/every.js';
import { __asyncToArray } from '../$to-array/async-to-array.js';

const isDone = (peekr) => peekr.done;

export async function* __asyncZipAll(sources, { filler } = {}) {
  const peekrs = await __asyncToArray(__asyncMap(sources, __asyncPeekerate));
  let done = __every(peekrs, isDone);

  try {
    while (!done) {
      yield peekrs.map(({ value, done }) => (done ? filler : value));

      await asyncParallelEach(peekrs, (peekr) => peekr.advance());

      done = __every(peekrs, isDone);
    }
  } finally {
    await asyncParallelEach(peekrs, (peekr) => peekr.return());
  }
}

export const asyncZipAll = /*#__PURE__*/ asyncIterableCurry(__asyncZipAll, {
  variadic: true,
  minArgs: 0,
  maxArgs: 1,
});
