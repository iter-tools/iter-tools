/**
 * @generated-from ./$zip-all.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { AsyncWrappable, AsyncIterableIterator } from '../../types/async-iterable';

declare function asyncZipAll<F, T, U>(
  options: { filler?: F },
  source1: AsyncWrappable<T>,
  source2: AsyncWrappable<U>,
): AsyncIterableIterator<[T | F, U | F]>;

declare function asyncZipAll<T, U>(
  source1: AsyncWrappable<T>,
  source2: AsyncWrappable<U>,
): AsyncIterableIterator<[T | undefined, U | undefined]>;

declare function asyncZipAll<F, T, U, V>(
  options: { filler?: F },
  source1: AsyncWrappable<T>,
  source2: AsyncWrappable<U>,
  source3: AsyncWrappable<V>,
): AsyncIterableIterator<[T | F, U | F, V | F]>;

declare function asyncZipAll<T, U, V>(
  source1: AsyncWrappable<T>,
  source2: AsyncWrappable<U>,
  source3: AsyncWrappable<V>,
): AsyncIterableIterator<[T | undefined, U | undefined, V | undefined]>;

declare function asyncZipAll<F, T>(
  options: { filler?: F },
  ...sources: Array<AsyncWrappable<T>>
): AsyncIterableIterator<Array<T | F>>;

declare function asyncZipAll<T>(
  ...sources: Array<AsyncWrappable<T>>
): AsyncIterableIterator<Array<T | undefined>>;

export { asyncZipAll };
