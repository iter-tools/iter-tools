/**
 * @generated-from ./async-interpose.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncInterpose } from '@iter-tools/es';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers.js';

describe('asyncInterpose', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncInterpose('', null))).toEqual([]);
      expect(await asyncUnwrap(asyncInterpose('', undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncInterpose('', asyncWrap([])))).toEqual([]);
    });
  });

  describe('when source contains a single value', () => {
    it('yields that value', async () => {
      const iter = asyncInterpose(null, asyncWrap([1]));
      expect(await asyncUnwrap(iter)).toEqual([1]);
    });
  });

  describe('when source contains multiple values', () => {
    it('yields interposed value between each value from source', async () => {
      const iter = asyncInterpose(null, asyncWrap([1, 2, 3]));
      expect(await asyncUnwrap(iter)).toEqual([1, null, 2, null, 3]);
    });
  });
});
