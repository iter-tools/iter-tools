/**
 * @generated-from ./$take-sorted.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import Heap from 'little-ds-toolkit/lib/heap';
import { asyncIterableCurry } from '../../internal/async-iterable';
import defaultCompare from '../../internal/compare';
export async function* asyncTakeSorted(iterable, comparator = defaultCompare, number) {
  const heap = new Heap(comparator);

  for await (const item of iterable) {
    heap.push(item);

    if (heap.size() > number) {
      heap.pop();
    }
  }

  const len = heap.size();

  for (let i = 0; i < len; i++) {
    yield heap.pop();
  }
}
export default asyncIterableCurry(asyncTakeSorted, {
  minArgs: 1,
  maxArgs: 2,
});
