/**
 * @generated-from ./async-for-each.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { asyncForEach } from '../../..';
import { asyncWrap } from '../../../test/async-helpers';

describe('asyncForEach', () => {
  it('calls callback for each value in iterable', async () => {
    const arr: Array<number> = [];

    await asyncForEach(item => arr.push(item), asyncWrap([1, 2, 3]));

    expect(arr).toEqual([1, 2, 3]);
  });

  it('may take an async callback', async () => {
    const arr: Array<number> = [];

    await asyncForEach(async item => arr.push(item), asyncWrap([1, 2, 3]));

    expect(arr).toEqual([1, 2, 3]);
  });
});
