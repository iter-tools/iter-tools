/**
 * @generated-from ./$peekerate.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { SourceIterable } from '../../types/iterable';

interface PeekeratorBase {
  advance(): void;
  return(): void;
  readonly index: number;
}

interface DonePeekerator extends PeekeratorBase {
  readonly current: { done: true; value: undefined };
  readonly done: true;
  readonly value: undefined;
}

interface ValuePeekerator<T> extends PeekeratorBase {
  readonly current: { done: false; value: T };
  readonly done: false;
  readonly value: T;
}

export type Peekerator<T> = DonePeekerator | ValuePeekerator<T>;

export declare class PeekeratorClass<T> implements PeekeratorBase {
  constructor(iterator: Iterator<T>, first: T);
  static from<T>(source: Iterable<T>): Peekerator<T>;
  readonly current: { done: true; value: undefined } | { done: false; value: T };
  readonly done: boolean;
  readonly value: T | undefined;
  readonly index: number;
  advance(): void;
  return(): void;
}

declare function peekerate<T>(source: SourceIterable<T>): Peekerator<T>;

export default peekerate;
