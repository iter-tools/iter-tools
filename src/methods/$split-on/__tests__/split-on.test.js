/**
 * @generated-from ./$split-on.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { splitOn } from '../../..';
import { unwrapDeep as uw } from '../../../__tests__/helpers';
import { wrap } from '../../../__tests__/__framework__/wrap';

describe('splitOn', () => {
  it('should split between every item which is equal to the on argument', () => {
    expect(uw(splitOn(null, wrap([1, null, 2, null, 3])))).toEqual([[1], [2], [3]]);
  });

  it('should throw when splits are consumed out of order', () => {
    const parts = splitOn(null, wrap([1, null, 2]));
    const a = parts.next().value;
    const b = parts.next().value;
    let error;
    try {
      uw([b, a]);
    } catch (e) {
      error = e;
    }
    expect(error).toMatchSnapshot();
  });

  it('should yield [] between two separators', () => {
    expect(uw(splitOn(null, wrap([1, null, null, 3])))).toEqual([[1], [], [3]]);
  });

  it('should yield [], [] when only separator', () => {
    expect(uw(splitOn(null, wrap([null])))).toEqual([[], []]);
  });

  it('passes through the empty iterable', () => {
    expect(uw(splitOn(0, null))).toEqual([]);
  });
});
