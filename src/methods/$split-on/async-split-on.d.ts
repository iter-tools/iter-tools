/**
 * @generated-from ./$split-on.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { AsyncSourceIterable, AsyncResultIterable } from '../../types/async-iterable'; // curried
// prettier-ignore

declare function asyncSplitOn(separatorValue: string, compareEquality?: (value: string, item: string) => boolean): (source: string) => AsyncResultIterable<string>;
declare function asyncSplitOn(
  separatorValue: any,
): <T>(source: AsyncSourceIterable<T>) => AsyncResultIterable<AsyncResultIterable<T>>;
declare function asyncSplitOn<V, T>(
  separatorValue: V,
  compareEquality: (value: V, item: T) => boolean,
): (source: AsyncSourceIterable<T>) => AsyncResultIterable<AsyncResultIterable<T>>; // noncurried
// prettier-ignore

declare function asyncSplitOn(separatorValue: string, compareEquality: (value: string, item: string) => boolean, source: string): AsyncResultIterable<string>; // prettier-ignore

declare function asyncSplitOn(separatorValue: string, source: string): AsyncResultIterable<string>;
declare function asyncSplitOn<V, T>(
  separatorValue: V,
  compareEquality: (value: V, item: T) => boolean,
  source: AsyncSourceIterable<T>,
): AsyncResultIterable<AsyncResultIterable<T>>;
declare function asyncSplitOn<T>(
  separatorValue: any,
  source: AsyncSourceIterable<T>,
): AsyncResultIterable<AsyncResultIterable<T>>;
export default asyncSplitOn;
