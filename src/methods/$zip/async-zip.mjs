/**
 * @generated-from ./$zip.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncIterableCurry } from '../../internal/async-iterable';
import { asyncPeekerate } from '../$peekerate/async-peekerate';
import { asyncMap } from '../$map/async-map';
import { map } from '../$map/map';
import { some } from '../$some/some';
import { asyncToArray } from '../$to-array/async-to-array';

const isDone = peekr => peekr.done;

export async function* asyncZip(sources) {
  if (!sources.length) return;

  const peekrs = await asyncToArray(asyncMap(sources, asyncPeekerate));
  let done = some(peekrs, isDone);

  try {
    while (!done) {
      yield peekrs.map(({ value }) => value);

      await Promise.all(map(peekrs, peekr => peekr.advance()));

      done = some(peekrs, isDone);
    }
  } finally {
    for (const peekr of peekrs) await peekr.return();
  }
}

export default asyncIterableCurry(asyncZip, {
  variadic: true,
});
