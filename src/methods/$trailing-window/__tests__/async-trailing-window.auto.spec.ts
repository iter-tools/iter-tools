/**
 * @generated-from ./async-trailing-window.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncTrailingWindow, asyncMap, asyncToArray } from '../../..';
describe('asyncTrailingWindow', () => {
  it('frames iterable', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 3,
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      [undefined, undefined, 1],
      [undefined, 1, 2],
      [1, 2, 3],
      [2, 3, 4],
      [3, 4, 5],
    ]);
  });
  it('frames iterable (use filler)', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 3,
        filler: 'x',
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      ['x', 'x', 1],
      ['x', 1, 2],
      [1, 2, 3],
      [2, 3, 4],
      [3, 4, 5],
    ]);
  });
  it('frames iterable (window equal to the sequence)', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 5,
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      [undefined, undefined, undefined, undefined, 1],
      [undefined, undefined, undefined, 1, 2],
      [undefined, undefined, 1, 2, 3],
      [undefined, 1, 2, 3, 4],
      [1, 2, 3, 4, 5],
    ]);
  });
  it('frames iterable (window bigger than the sequence)', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 6,
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      [undefined, undefined, undefined, undefined, undefined, 1],
      [undefined, undefined, undefined, undefined, 1, 2],
      [undefined, undefined, undefined, 1, 2, 3],
      [undefined, undefined, 1, 2, 3, 4],
      [undefined, 1, 2, 3, 4, 5],
    ]);
  });
  it('frames iterable (window bigger than the sequence) with filler', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 6,
        filler: 'x',
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      ['x', 'x', 'x', 'x', 'x', 1],
      ['x', 'x', 'x', 'x', 1, 2],
      ['x', 'x', 'x', 1, 2, 3],
      ['x', 'x', 1, 2, 3, 4],
      ['x', 1, 2, 3, 4, 5],
    ]);
  });
  it('frames iterable (window bigger than the sequence)', async () => {
    const iter = asyncTrailingWindow(
      {
        size: 7,
      },
      [1, 2, 3, 4, 5],
    );
    expect(await asyncToArray(asyncMap(wndw => [...wndw], iter))).toEqual([
      [undefined, undefined, undefined, undefined, undefined, undefined, 1],
      [undefined, undefined, undefined, undefined, undefined, 1, 2],
      [undefined, undefined, undefined, undefined, 1, 2, 3],
      [undefined, undefined, undefined, 1, 2, 3, 4],
      [undefined, undefined, 1, 2, 3, 4, 5],
    ]);
  });
});
