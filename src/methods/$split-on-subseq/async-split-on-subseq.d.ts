/**
 * @generated-from ./$split-on-subseq.d.ts
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { AsyncSourceIterable, AsyncResultIterable } from '../../types/async-iterable'; // curried
// prettier-ignore

declare function asyncSplitOnSubseq(separatorSubseq: AsyncSourceIterable<string>, compare?: (value: string, item: string) => boolean): (source: string) => AsyncResultIterable<string>;
declare function asyncSplitOnSubseq(
  separatorSubseq: AsyncSourceIterable<any>,
): <T>(source: AsyncSourceIterable<T>) => AsyncResultIterable<AsyncResultIterable<T>>;
declare function asyncSplitOnSubseq<V, T>(
  separatorSubseq: AsyncSourceIterable<V>,
  compare: (value: V, item: T) => boolean,
): (source: AsyncSourceIterable<T>) => AsyncResultIterable<AsyncResultIterable<T>>; // noncurried
// prettier-ignore

declare function asyncSplitOnSubseq(separatorSubseq: AsyncSourceIterable<string>, compare: (value: string, item: string) => boolean, source: string): AsyncResultIterable<string>; // prettier-ignore

declare function asyncSplitOnSubseq(
  separatorSubseq: AsyncSourceIterable<string>,
  source: string,
): AsyncResultIterable<string>;
declare function asyncSplitOnSubseq<V, T>(
  separatorSubseq: AsyncSourceIterable<V>,
  compare: (value: V, item: T) => boolean,
  source: AsyncSourceIterable<T>,
): AsyncResultIterable<AsyncResultIterable<T>>;
declare function asyncSplitOnSubseq<T>(
  separatorSubseq: AsyncSourceIterable<any>,
  source: AsyncSourceIterable<T>,
): AsyncResultIterable<AsyncResultIterable<T>>;
export default asyncSplitOnSubseq;
