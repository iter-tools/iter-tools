/**
 * @generated-from ./$split-on-subseq.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { asyncSplitOnSubseq, asyncToArray } from '../../..';
import { asyncUnwrapDeep as asyncUw } from '../../../__tests__/async-helpers';
import { asyncWrap } from '../../../__tests__/__framework__/async-wrap';

describe('asyncSplitOnSubseq', () => {
  it('can split on subseqences', async () => {
    expect(await asyncUw(asyncSplitOnSubseq([2, 3], asyncWrap([1, 2, 3, 4])))).toEqual([[1], [4]]);
  });

  it('can split on subseqences', async () => {
    expect(await asyncUw(asyncSplitOnSubseq([3, 4, undefined], asyncWrap([1, 2, 3, 4])))).toEqual([
      [1, 2, 3, 4],
    ]);
  });

  it('passes through the empty iterable', async () => {
    expect(await asyncToArray(asyncSplitOnSubseq([], null))).toEqual([]);
  });

  it('passes through the empty string', async () => {
    expect(await asyncToArray(asyncSplitOnSubseq(' ', ''))).toEqual([]);
  });
});
