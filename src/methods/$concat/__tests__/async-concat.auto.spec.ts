/**
 * @generated-from ./async-concat.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { asyncConcat } from '../../..';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers';

describe('asyncConcat', () => {
  describe('when there are no sources', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncConcat())).toEqual([]);
    });
  });

  describe('when sources are empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncConcat(null, undefined, asyncWrap([])))).toEqual([]);
    });
  });

  describe('when sources contain values', () => {
    it("each source's values are yielded in sequence", async () => {
      expect(await asyncUnwrap(asyncConcat(asyncWrap([1, 2]), asyncWrap([3, 4])))).toEqual([
        1,
        2,
        3,
        4,
      ]);
    });
  });
});
