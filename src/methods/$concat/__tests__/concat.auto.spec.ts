/**
 * @generated-from ./concat.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { concat } from '../../..';
import { wrap, unwrap } from '../../../test/helpers';

describe('concat', () => {
  describe('when there are no sources', () => {
    it('yields no values', () => {
      expect(unwrap(concat())).toEqual([]);
    });
  });

  describe('when sources are empty', () => {
    it('yields no values', () => {
      expect(unwrap(concat(null, undefined, wrap([])))).toEqual([]);
    });
  });

  describe('when sources contain values', () => {
    it("each source's values are yielded in sequence", () => {
      expect(unwrap(concat(wrap([1, 2]), wrap([3, 4])))).toEqual([1, 2, 3, 4]);
    });
  });
});
