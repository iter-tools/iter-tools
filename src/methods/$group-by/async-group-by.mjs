/**
 * @generated-from ./$group-by.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { asyncIterableCurry } from '../../internal/async-iterable';
import { asyncSpliterateGrouped } from '../$spliterate-grouped/async-spliterate-grouped';
import { asyncPeekerate } from '../$peekerate/async-peekerate';

const initialKey = Symbol('initial group key');

let warnedNullGetKeyDeprecation = false;

const warnNullGetKeyDeprecation = () => {
  if (!warnedNullGetKeyDeprecation) {
    console.warn(
      `\`${'asyncGroupBy'}(null, iterable)\` is deprecated and will be removed in iter-tools@8. ` +
        `Instead use ${'asyncGroup'}(iterable)`,
    );
    warnedNullGetKeyDeprecation = true;
  }
};

async function* asyncGroupingSpliterator(split, { getKey }, source) {
  const peekr = await asyncPeekerate(source);
  let key = initialKey;
  let idx = 0;

  while (!peekr.done) {
    const lastKey = key;

    key = await getKey(peekr.value, idx++);

    if (lastKey !== key) {
      yield split;
      yield key;
    }

    yield peekr.value;

    await peekr.advance();
  }
}

export function asyncGroupBy(source, getKey) {
  if (getKey === null) {
    warnNullGetKeyDeprecation();
    getKey = _ => _;
  }

  return asyncSpliterateGrouped(source, asyncGroupingSpliterator, { getKey });
}

export default asyncIterableCurry(asyncGroupBy);
