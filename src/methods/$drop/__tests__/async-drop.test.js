/**
 * @generated-from ./$drop.test.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

/* eslint-disable no-unused-vars,import/no-duplicates,no-constant-condition */

import { asyncDrop } from '../../..';
import { asyncWrap, asyncUnwrap } from '../../../test/async-helpers';

describe('asyncDrop', () => {
  describe('when source is empty', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncDrop(0, null))).toEqual([]);
      expect(await asyncUnwrap(asyncDrop(0, undefined))).toEqual([]);
      expect(await asyncUnwrap(asyncDrop(0, asyncWrap([])))).toEqual([]);
    });
  });

  describe('when n is smaller than size(source)', () => {
    it('drops the first n values and yields the rest', async () => {
      expect(await asyncUnwrap(asyncDrop(1, asyncWrap([1, 2, 3])))).toEqual([2, 3]);
    });
  });

  describe('when n is larger than size(source)', () => {
    it('yields no values', async () => {
      expect(await asyncUnwrap(asyncDrop(4, asyncWrap([1, 2, 3])))).toEqual([]);
    });
  });
});
