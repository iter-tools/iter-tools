/**
 * @generated-from ./$round-robin.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { iterableCurry } from '../../internal/iterable';

import { interleave } from '../$interleave/interleave';

function* byPosition({ start, step }, all, ...peekrs) {
  start = start % peekrs.length;
  for (let i = start; !all.done; i = (i + step) % peekrs.length) {
    const peekr = peekrs[i];
    if (!peekr.done) {
      yield peekr.value;
      peekr.advance();
    }
  }
}

export function roundRobin(sources, start = 0, step = 1) {
  return interleave(sources, byPosition, { start, step });
}

export default iterableCurry(roundRobin, {
  variadic: true,
  minArgs: 0,
  maxArgs: 2,
  validateArgs(args) {
    if (args[1] && typeof args[1] === 'object') {
      const { start, step } = args[1];
      args[0] = start != null ? start : 0;
      args[1] = step != null ? start : 1;
    }

    if (args[1] <= 0) {
      throw new Error('step argument to roundRobin must be >= 0');
    }
  },
});
