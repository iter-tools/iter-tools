/**
 * @generated-from ./group-by.template.js
 * This file is autogenerated from a template. Please do not edit it directly.
 * To rebuild it from its template use the command
 * > npm run generate
 * More information can be found in CONTRIBUTING.md
 */

import { iterableCurry } from './internal/async-iterable'
import splitBy from './internal/async-split-by'

async function * cons (item, iterable) {
  yield item
  yield * iterable
}

async function car (iterable) {
  const iterator = iterable[Symbol.asyncIterator]()
  const {
    done,
    value
  } = await iterator.next()
  if (done) return []
  return [value, iterator]
}

async function * groupBy (getKey = k => k, iterable) {
  for await (const subseq of splitBy(getKey, iterable)) {
    const [first, rest] = await car(subseq)
    if (rest === undefined) return
    const key = await getKey(first)
    yield [key, cons(first, rest)]
  }
}

export default iterableCurry(groupBy, {
  minArgs: 0,
  maxArgs: 1
})
